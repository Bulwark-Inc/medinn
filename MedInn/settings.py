"""
Django settings for MedInn project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-!+5m)(#3mbav6redr!4ga&n6)fkg1vw#b9f^1chyjyb-*4fsx*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Default
    'allauth.account.auth_backends.AuthenticationBackend',
]

AUTH_USER_MODEL = 'users.CustomUser'
# ACCOUNT_SIGNUP_FORM_CLASS = 'users.forms.CustomSignupForm'
ACCOUNT_FORMS = {
    'signup': 'users.forms.CustomSignupForm',
}


# Allauth settings
ACCOUNT_EMAIL_REQUIRED = True  # Ensure email is mandatory during signup
ACCOUNT_EMAIL_VERIFICATION = "mandatory"  # Email verification is compulsory
ACCOUNT_AUTHENTICATION_METHOD = "email"  # Use email as the primary method for authentication
ACCOUNT_CONFIRM_EMAIL_ON_GET = True  # Allow email confirmation via a GET request

# Redirect users after email verification
LOGIN_REDIRECT_URL = '/users/dashboard/'  # After login or email verification
ACCOUNT_SIGNUP_REDIRECT_URL = '/accounts/email-verification-sent/'  # After signup, before verification
ACCOUNT_LOGOUT_REDIRECT_URL = '/'  # Redirect after logout

# Email backend (for development purposes, use console backend; use real SMTP in production)
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Default "from" email address for sending emails
DEFAULT_FROM_EMAIL = 'noreply@medinn.com'

SITE_ID = 1

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',  # Required for django-allauth
    # for ckeditor
    'ckeditor',
    'ckeditor_uploader',
    # for allauth configuration
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # custom apps
    'main',
    'blogs',
    'forums',
    'notifications',
    'orders',
    'products',
    'users',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'middleware.role_middleware.RoleBasedAccessMiddleware',
]

ROOT_URLCONF = 'MedInn.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'MedInn.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'staticfiles/'
STATIC_ROOT = BASE_DIR / "staticfiles"
MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / 'media'
# CKEditor configuration
CKEDITOR_UPLOAD_PATH = "uploads/ckeditor/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
